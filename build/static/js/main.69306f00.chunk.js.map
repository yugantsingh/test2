{"version":3,"sources":["Meditech.png","Meditech FP Final-01.png","Meditech FP Final-2-01.png","DoctorFP.jpeg","jj.jpg","DatabaseFP.jpeg","shared/hooks/useHttpClient.js","shared/util/AuthContext.js","users/pages/vitals.js","users/pages/IndividualCard.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","users/pages/medcard.js","users/pages/medlist.js","users/pages/usermeds.js","users/pages/prescriptionCard.js","users/pages/prescriptionList.js","users/pages/userPrescription.js","users/pages/profile.js","shared/components/UIElements/Chart.js","users/pages/vitalsList.js","users/pages/userVitals.js","users/pages/allergycard.js","users/pages/allergyList.js","users/pages/userAllergy.js","users/pages/docCard.js","users/pages/doclist.js","users/pages/userDoctors.js","doctors/patientCard.js","doctors/patientList.js","doctors/docPatients.js","doctors/prescriptionCard.js","doctors/PrescriptionList.js","doctors/docPrescription.js","doctors/DocProfile.js","users/pages/Signup.js","users/pages/Login.js","users/pages/addAllergy.js","doctors/DoctorSignup.js","doctors/DoctorLogin.js","users/pages/prescriptiondisplay.js","shared/components/navigation/SideDrawer.js","shared/components/navigation/MainNavigation.js","shared/util/DocContext.js","doctors/addprescription.js","users/pages/DoctorCard.js","users/pages/doctors.js","users/pages/DoctorList.js","doctors/vitalsList.js","doctors/userVitals.js","Footer.js","Animation.js","FrontPage.js","doctors/allergycard.js","doctors/allergyList.js","doctors/userAllergy.js","users/pages/Appointment.js","App.js","index.js"],"names":["module","exports","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","token","isDoctor","login","logout","doctorlogin","doctorlogout","Vitals","auth","useContext","history","useHistory","placeSubmitHandler","event","preventDefault","date","document","getElementById","value","pulse","sugar","BPS","BPD","temperature","weight","height","JSON","stringify","creator","className","style","minHeight","id","Jumbotron","bg-dark","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","variant","IndividualCard","Card","width","marginLeft","marginRight","marginTop","Img","src","Akira","Body","Title","Text","Backdrop","props","ReactDOM","createPortal","onClick","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","to","exact","disabled","ErrorModal","onClear","LoadingSpinner","asOverlay","MedCard","border","fontSize","color","doctor","patient","meds","map","number","key","MedList","items","length","CardDeck","med","docID","patID","UserMeds","loadedmeds","setLoadedMeds","console","log","Medicines","fetchPlaces","PrescriptionCard","name","PrescriptionList","pres","age","UserPrescription","loadedpres","setLoadedPres","Prescriptions","chart","chartType","loader","data","points","options","hAxis","title","gridlines","count","vAxis","animation","startup","easing","duration","series","1","curveType","rootProps","VitalList","i","j","k","slice","Math","max","Row","Col","sm","Chart","UserVitals","loadedvital","setLoadedVital","vitals","AllergyCard","from","reaction","AllergyList","v","UserAllergy","loadedAllergy","setLoadedAllergy","allergies","DocCard","DocList","UserDoctors","loadeddoc","setLoadedDoc","User","Profile","md","borderRight","class","Tabs","defaultActiveKey","fontFamily","fontWeight","Tab","eventKey","PatientCard","patients","path","PatientList","DocPatients","DocPrescription","DocProfile","Signup","onFormSubmit","e","email","password","user","Alert","margin","zIndex","Heading","bg","InputGroup","Prepend","backgroundColor","Login","textAlign","Allergy","DoctorSignup","doctors","DoctorLogin","Hello","presID","useParams","prescription","maxWidth","display","patname","hospitalname","Badge","note","padding","doze","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","routeChange","Navbar","sticky","Brand","Toggle","aria-controls","Collapse","Nav","docId","InputingPers","m","d","Table","striped","bordered","hover","DoctorCard","setLoadedDoctors","addDoc","marginBottom","paddingBottom","doc","image","JJ","Doctors","loadedDoctors","fetchUsers","PatientVitals","Footer","Animation","flip","set","useSpring","reset","numbering","delay","config","molasses","onRest","div","n","toFixed","FrontPage","Carousel","Item","PageBG","alt","PageBG2","PageBG3","left","alignItems","top","right","Image","DoctorFP","fluid","rounded","bottom","PatientAllergy","Appointment","setShow","docEmail","patEmail","App","setToken","setTokenExpirationDate","setUserId","setIsDoctor","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","storedData","parse","getItem","routes","Provider","render"],"mappings":"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","file":"static/js/main.69306f00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Meditech.0d2d38f1.png\";","module.exports = __webpack_public_path__ + \"static/media/Meditech FP Final-01.b5bfd235.png\";","module.exports = __webpack_public_path__ + \"static/media/Meditech FP Final-2-01.b8bd175f.png\";","module.exports = __webpack_public_path__ + \"static/media/DoctorFP.ea3ba46b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/jj.fcf46670.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DatabaseFP.937f6a18.jpeg\";","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId:null,\n  token:null,\n  isDoctor:false,\n  login: () => {},\n  logout: () => {},\n  doctorlogin:()=>{},\n  doctorlogout:()=>{}\n});\n","import React, {useContext} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport \"../../css/Allergy.css\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport {AuthContext} from '../../shared/util/AuthContext';\n\nconst Vitals = () => {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const placeSubmitHandler=async event =>{\n     event.preventDefault();\n     var date = document.getElementById('date'). value;\n     var pulse = document.getElementById('pulse').value;\n     var sugar = document.getElementById('sugar'). value;\n     var BPS = document.getElementById('BPS').value;\n     var BPD = document.getElementById('BPD').value;\n     var temperature = document.getElementById('temperature').value;\n     var weight = document.getElementById('weight').value;\n     var height = document.getElementById('height').value;\n    try {\n        await sendRequest(\n            'http://localhost:5000/api/places/vitals',\n            'POST', \n            JSON.stringify({\n               sugar:sugar, \n               BPS: BPS,\n               BPD:BPD,\n               pulse:pulse,\n               temperature: temperature,\n               date: date,\n               weight:weight,\n               height:height,\n               creator: auth.userId\n            }),\n     { 'Content-Type': 'application/json' }\n     );\n     history.push('/');\n  }catch(err){}\n  };\n\n\n\nreturn (\n  <div  className=\"BGGradeAllergy\" style={{ minHeight:\"160vh\"}}>\n  <div className=\"TopMarginAllergy\"></div>\n\n  <div className=\"box\" id=\"heading\">\n      <h1 className=\"Heading\"> Vitals</h1>{\" \"}\n  </div>\n  <Jumbotron className=\"container\" bg-dark>\n      <Form className=\"form-signin\" onSubmit={placeSubmitHandler}>\n          <Form.Group controlId=\"formGroupheart\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Date\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"date\"\n                  placeholder=\"Date\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupBP\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Blood Pressure Diastolic\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"BPD\"\n                  placeholder=\"Blood Pressure Diastolic\"\n                  className=\"AllergyFormText\"\n              />\n              </Form.Group>\n               <Form.Group controlId=\"formGroupBP2\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Blood Pressure Systolic\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"BPS\"\n                  placeholder=\"Blood Pressure Systolic\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupsugar\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Sugar\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"sugar\"\n                  placeholder=\"Sugar\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupTemperature\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Temperature\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"temperature\"\n                  placeholder=\"Temperature\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupSystol\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Heart Rate\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"pulse\"\n                  placeholder=\"Heart Rate\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupWeight\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Weight\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"weight\"\n                  placeholder=\"Weight\"\n                  className=\"AllergyFormText\"\n              />\n              </Form.Group>\n              <Form.Group controlId=\"formGroupHeight\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Height\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"height\"\n                  placeholder=\"Height\"\n                  className=\"AllergyFormText\"\n              />\n              </Form.Group>\n          <br />\n          <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"AllergyButton\"\n          >\n              Submit\n          </Button>\n      </Form>\n  </Jumbotron>\n</div>\n);\n};\n\nexport default Vitals;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../../jj.jpg\";\n\nexport const IndividualCard = () => {\n    return (\n        <div>\n            <Card\n                style={{\n                    width: \"18rem\",\n                    marginLeft: \"0.8rem\",\n                    marginRight: \"0.8rem\",\n                    marginTop: \"0.8rem\",\n                }}\n            >\n                <Card.Img variant=\"top\" src={Akira} />\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n                    <Card.Text>\n                        Some quick example text to build on the card title and\n                        make up the bulk of the card's content.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../UIElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../../jj.jpg\";\nimport \"../../css/DoctorListCard.css\";\n\n\nconst MedCard = (props) => {\n    return (\n        <div>\n            <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-pills fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"2rem\", color: \"#195a65\" }}>\n                        {props.date}\n                    </Card.Title>\n                    <Card.Text>\n                        Doctor: {props.doctor}\n                        <br />\n                        Patient: {props.patient}\n                        Meds:\n                        <ul>\n                            {props.meds.map((number) => (\n                                <li key={props.id}>{number}</li>\n                            ))}\n                        </ul>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default MedCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport MedCard from './medcard';\n\n\n\nconst MedList = props =>{\n    if( props.items.length === 0)\n    {\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Medicines Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    return(\n    <CardDeck>\n    {props.items.map( med=> (\n    <MedCard\n    id={med.id}\n    doctor={med.docID}\n    patient={med.patID}\n    date={med.date}\n    meds ={med.meds}\n    \n    />))}\n    </CardDeck> \n\n    );\n};\n export default MedList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport MedList from './medlist';\nimport { AuthContext } from '../../shared/util/AuthContext';\n\nconst UserMeds = () =>{\n  const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadedmeds, setLoadedMeds] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/medicines`\n      );\n      console.log(responseData.Medicines);\n      setLoadedMeds(responseData.Medicines);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\nconsole.log(loadedmeds);\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedmeds && <MedList items={loadedmeds}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default UserMeds;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../../jj.jpg\";\nimport { Link } from \"react-router-dom\";\nimport \"../../css/DoctorListCard.css\";\n\nconst PrescriptionCard = (props) => {\n    return (\n        <div>\n            <Link to={`/prescriptions/${props.id}`}>\n                <Card border=\"info\" className=\"DoctorListCards\">\n                    <br />\n                    <font className=\"DoctorIcon\">\n                        <i className=\"fas fa-user-md fa-9x\"></i>\n                    </font>\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontSize: \"2rem\", color: \"#195a65\" }}\n                        >\n                            {props.date}\n                        </Card.Title>\n                        <Card.Text>\n                            Doctor: {props.doctor}\n                            Patient:{props.name}\n                            <ul>\n                                {props.meds.map((number) => (\n                                    <li key={props.id}>{number}</li>\n                                ))}\n                            </ul>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Link>\n        </div>\n    );\n};\n\nexport default PrescriptionCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport PrescriptionCard from './prescriptionCard';\n\n\n\nconst PrescriptionList = props =>{\n    if( props.items.length === 0)\n    {\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Prescriptions Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    return(\n    <CardDeck>\n    {props.items.map( pres=> (\n    <PrescriptionCard\n    id={pres.id}\n    doctor={pres.doctor}\n    patient={pres.patient}\n    date={pres.date}\n    meds ={pres.meds}\n    age ={pres.age}\n    name ={pres.name}\n    \n    />))}\n    </CardDeck> \n\n    );\n};\n export default PrescriptionList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PrescriptionList from './prescriptionList';\nimport { AuthContext } from '../../shared/util/AuthContext';\n\nconst UserPrescription = () =>{\n  const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadedpres, setLoadedPres] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/prescription`\n      );\n      setLoadedPres(responseData.Prescriptions);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedpres && <PrescriptionList items={loadedpres}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default UserPrescription;","import React,{useContext} from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport image from '../../jj.jpg';\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Row from \"react-bootstrap/Row\";\nimport ImageTest from \"../../jj.jpg\";\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport { IndividualCard } from \"./IndividualCard\";\nimport UserMeds from './usermeds';\nimport UserPrescription from './userPrescription';\nimport UserVitals from './userVitals';\nimport UserAllergy  from './userAllergy';\nimport UserDoctors from './userDoctors';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport \"../../css/Profile.css\";\nlet items = [];\nfor (let i = 0; i < 20; i++) {\n    items.push(<IndividualCard />);\n}\n\nconst Profile = () => {\n    const auth = useContext(AuthContext);\n    return (  \n        <div className=\"BGGradProfile\">\n            <div\n                style={{\n                    marginLeft: \"2rem\",\n                    marginRight: \"1rem\",\n                    marginTop: \"1rem\",\n                    minHeight: \"80vh\",\n                }}\n            >\n            <Row  md={12} sm={0}>\n                <Col\n                    sm={3}\n                    style={{\n                        borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n                    }}\n                >\n                    <Card className=\"ProfileCard\">\n                       \n                           <br />\n                            <br />\n                            <font className=\"ProfiledCardText\">\n                                <i class=\"fas fa-user fa-9x\"> </i>{\" \"}\n                            </font>\n\n                            <br />\n                            <br />\n                        <Card.Body>\n                            \n                            <Card.Text className=\"ProfileCardTextInfo\">{auth.userId}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={9}\n                 style={{\n                    borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n                }}>\n                    <Tabs\n                        defaultActiveKey=\"home\"\n                        id=\"uncontrolled-tab-example\"\n                        style={{\n                            fontFamily: \"Montserrat, sans-serif\",\n                            fontWeight: \"600\",\n                            color: \"red\",\n                        }}\n                    >\n                        <Tab eventKey=\"home\" title=\"Vitals\">\n                            \n                            <div>\n                                <UserVitals />\n                            </div>\n                            \n                        </Tab>\n                        <Tab eventKey=\"profile\" title=\"Prescriptions\">\n                        <div>\n                                <UserPrescription />\n                            </div>\n                        </Tab>\n                        <Tab eventKey=\"allergy\" title=\"Allergy\">\n                        <div>\n                               <UserAllergy  />\n                            </div>\n                        </Tab>\n                        <Tab eventKey=\"docs\" title=\"Your Doctors\">\n                        <div>\n                                <UserDoctors  />\n                            </div>\n                        </Tab>\n                        <Tab eventKey=\"contact\" title=\"Medications\">\n                        <div>\n                               <UserMeds />\n                            </div>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n        </div>{\" \"}\n        </div>\n    );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\n \nfunction chart(props){\n  return(<Chart\n    width={'100%'}\n    height={'100%'}\n    chartType=\"LineChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['x', 'Normal', 'Your Value'],\n      [0, props.points[8], props.points[8]],\n      [1, props.points[8],props.points[0]],\n      [2, props.points[8], props.points[1]],\n      [3, props.points[8], props.points[2]],\n      [4, props.points[8], props.points[3]],\n      [5, props.points[8], props.points[4]],\n      [6, props.points[8], props.points[5]],\n      [7, props.points[8], props.points[6]],\n    ]}\n    options={{\n      hAxis: {\n        title: 'Date',\n        gridlines: {count:7}\n      },\n      vAxis: {\n        title: props.points[7],\n      },\n      animation: {\n        startup: true,\n        easing: 'out',\n        duration: 1000,\n      },\n      series:{\n        1: {curveType: 'function'}\n      }\n    }}\n    rootProps={{ 'data-testid': '2' }}\n  />);\n }\nexport default chart;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Row,CardColumns, CardDeck, CardGroup } from \"react-bootstrap\";\nimport VitalCard from './vitalCard';\nimport Chart from '../../shared/components/UIElements/Chart';\nimport \"../../css/DoctorListCard.css\";\n \nconst VitalList = props =>{\n    var sugar=[]\nvar BPS=[];\nvar BPD=[];\nvar temperature=[];\nvar weight=[];\nvar height=[];\nvar pulse=[];\n\n        for( let i =0 ; i<7;i++)\n        {\n        if(props.items.length === i)\n        { \n            for(let j=0; j<7-i; j++ )\n            {\n                sugar.push(\"100\");\n                BPS.push(\"120\");\n                BPD.push(\"80\");\n                temperature.push(\"37\");\n                height.push(\"0\");\n                weight.push(\"0\");\n                pulse.push(\"80\");\n            }  \n            for(let k=0; k<i; k++)\n            {\n                sugar.push(props.items[k].sugar);\n                BPS.push(props.items[k].BPS);\n                BPD.push(props.items[k].BPD);\n                temperature.push(props.items[k].temperature);\n                height.push(props.items[k].height);\n                weight.push(props.items[k].weight);\n                pulse.push(props.items[k].pulse);\n\n            }  \n        }\n    }\n    if(props.items.length.length >=7)\n    {\n        props.items.length=props.items.length.slice(Math.max(props.items.length.length - 7, 0))\n    }\n\n\n\n\n\n\n\nsugar.push(\"Sugar\");\nBPS.push(\"Blood Pressure Systolic\");\n BPD.push(\"Blood Pressure Diastolic\");\n temperature.push(\"Temperature\");\nheight.push(\"Height\");\nweight.push(\"Weight\");\npulse.push(\"Pulse\");\n                sugar.push(100);\n                BPS.push(120);\n                BPD.push(80);\n                temperature.push(37);\n                height.push(0);\n                weight.push(0);\n                pulse.push(80);\n    return(\n        \n        <>\n        <Row>\n            <Col sm={6}\n            >\n                <Card style={{\n                    \n                        width: \"90%\",\n                        height: \"24rem\",\n                       marginLeft: \"0.8rem\",\n                       marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                       \n                        \n\n                    }}>\n                    <Chart  points={sugar} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={pulse} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={BPS} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={BPD} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={temperature} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={height} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={weight} />\n                </Card>\n            </Col>\n        </Row>\n    </>\n    );\n};\n export default VitalList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport VitalList from './vitalsList';\nimport { AuthContext } from '../../shared/util/AuthContext';\nconst UserVitals = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadedvital, setLoadedVital] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/vitals`\n      );\n      setLoadedVital(responseData.vitals);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedvital && <VitalList items={loadedvital}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default UserVitals;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../../jj.jpg\";\nimport \"../../css/DoctorListCard.css\";\n\nconst AllergyCard = (props) => {\n    return (\n        <div>\n            <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-bacteria fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"2rem\", color: \"#195a65\" }}>\n                        Allergy\n                    </Card.Title>\n                    <Card.Text>\n                        Substance: {props.from}\n                        Reaction:{props.reaction}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default AllergyCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport AllergyCard from './allergycard';\n\n\n\nconst AllergyList = props =>{\n    if( props.items.length === 0)\n    {\n        console.log(props.items.length);\n        console.log(props.items);\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Allergy Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    console.log(props.items.length);\n        console.log(props.items);\n    return(\n    <CardDeck>\n    {props.items.map( v=> (\n    <AllergyCard\n    id={v.id}\n    from={v.from}\n    reaction={v.reaction}\n    creator ={v.creator}\n    />))}\n    </CardDeck> \n\n    );\n};\n export default AllergyList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport AllergyList from './allergyList';\nimport { AuthContext } from '../../shared/util/AuthContext';\nconst UserAllergy = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n \nconst [ loadedAllergy, setLoadedAllergy] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n        const responseData = await sendRequest(\n            `http://localhost:5000/api/places/users/${userId}/allergies`\n            );\n            setLoadedAllergy(responseData.allergies);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedAllergy && <AllergyList items={loadedAllergy}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default UserAllergy ;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../../jj.jpg\";\nimport \"../../css/DoctorListCard.css\";\n\nconst DocCard = (props) => {\n    return (\n        <div>\n            <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-user-md fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"1rem\", color: \"#195a65\" }}>\n                        {props.doctor}\n                    </Card.Title>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default DocCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport DocCard from './docCard';\n\n\n\nconst DocList = props =>{\n    if( props.items.length === 0)\n    {\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Doctors Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    return(\n    <CardDeck>\n    {props.items.map( med=> (\n    <DocCard \n    doctor={med.doctor}\n    \n    />))}\n    </CardDeck> \n\n    );\n};\n export default DocList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport DocList from './doclist';\nimport { AuthContext } from '../../shared/util/AuthContext';\n\nconst UserDoctors = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadeddoc, setLoadedDoc] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/yourdoctors`\n      );\n      setLoadedDoc(responseData.User);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadeddoc && <DocList items={loadeddoc}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default UserDoctors;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../jj.jpg\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/DoctorListCard.css\";\n\nconst PatientCard = (props) => {\n    const history = useHistory();\n    const routeChange2 = () => {\n        let path = `/allergy/${props.patients}`;\n        history.push(path);\n    };\n    const routeChange = () => {\n        let path = `/patients/${props.patients}`;\n        history.push(path);\n    };\n    return (\n        <div>\n            <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-user-injured fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"2rem\", color: \"#195a65\" }}>\n                        {props.patients}\n                    </Card.Title>\n                    <Button onClick={routeChange} variant=\"outline-success\">\n                        Vitals\n                    </Button>{\" \"}\n                    <Button onClick={routeChange2} variant=\"outline-success\">\n                        {\" \"}\n                        Allergy\n                    </Button>{\" \"}\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default PatientCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport PatientCard from './patientCard';\n\n\n\nconst PatientList = props =>{\n    if( props.items.length === 0 )\n    {\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Patients Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    \n    return(\n    <CardDeck>\n    {props.items.map( med=> (\n    <PatientCard \n    patients={med.patient}\n    \n    />))}\n    </CardDeck> \n\n    );\n};\n export default PatientList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport PatientList from './patientList';\nimport { AuthContext } from '../shared/util/AuthContext';\nconst DocPatients = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadeddoc, setLoadedDoc] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/doctors/${userId}/yourPatients`\n      );\n      \n      setLoadedDoc(responseData.doctor);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadeddoc && <PatientList items={loadeddoc}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default DocPatients;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../jj.jpg\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/DoctorListCard.css\";\n\nconst PrescriptionCard = (props) => {\n    return (\n        <div>\n            <Link to={`/prescriptions/${props.id}`}>\n                <Card border=\"info\" className=\"DoctorListCards\">\n                    <br />\n                    <font className=\"DoctorIcon\">\n                        <i className=\"fas fa-prescription fa-9x\"></i>\n                    </font>\n                    <Card.Body>\n                        <Card.Title\n                            style={{ fontSize: \"2rem\", color: \"#195a65\" }}\n                        >\n                            {props.date}\n                        </Card.Title>\n                        <Card.Text>\n                            Doctor: {props.doctor}\n                            <br></br>\n                            Patient:{props.patient}\n                            <ul>\n                                {props.meds.map((number) => (\n                                    <li key={props.id}>{number}</li>\n                                ))}\n                            </ul>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Link>\n        </div>\n    );\n};\n\nexport default PrescriptionCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport PrescriptionCard from './prescriptionCard';\n\n\n\nconst PrescriptionList = props =>{\n    if( props.items.length === 0)\n    {\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Prescriptions Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    return(\n    <CardDeck>\n    {props.items.map( pres=> (\n    <PrescriptionCard\n    id={pres.id}\n    doctor={pres.docID}\n    patient={pres.patID}\n    date={pres.date}\n    meds ={pres.meds}\n    age ={pres.age}\n    name ={pres.name}\n    \n    />))}\n    </CardDeck> \n\n    );\n};\n export default PrescriptionList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport PrescriptionList from './PrescriptionList';\nimport { AuthContext } from '../shared/util/AuthContext';\n\nconst DocPrescription = () =>{\n  const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadedpres, setLoadedPres] = useState();\nconst userId= auth.userId;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/docprescription`\n      );\n      setLoadedPres(responseData.Prescriptions);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedpres && <PrescriptionList items={loadedpres}  />}\n  </React.Fragment>\n  );\n  \n\n};\nexport default DocPrescription;","import React,{useContext} from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport image from '../jj.jpg';\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Row from \"react-bootstrap/Row\";\nimport ImageTest from \"../jj.jpg\";\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport DocPatients from './docPatients';\nimport DocPrescription from './docPrescription';\nimport { AuthContext } from '../shared/util/AuthContext';\n\nimport { Link } from 'react-router-dom';\nimport \"../css/Profile.css\";\n\n\n\nconst DocProfile = () => {\n    const auth = useContext(AuthContext);\n    return (  \n        <div className=\"BGGradProfile\">\n        <div\n            style={{\n                marginLeft: \"2rem\",\n                marginRight: \"1rem\",\n                marginTop: \"1rem\",\n            }}\n        >\n            <Row  md={12} sm={0}>\n                <Col\n                    sm={3}\n                    style={{\n                        borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n                    }}\n                >\n                    <Card className=\"ProfileCard\">\n                       \n                       <br />\n                        <br />\n                        <font className=\"ProfiledCardText\">\n                            <i class=\"fas fa-user fa-9x\"> </i>{\" \"}\n                        </font>\n\n                        <br />\n                        <br />\n                        <Card.Body>\n                        <Card.Text className=\"ProfileCardTextInfo\">{auth.userId}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={9}\n                 style={{\n                    borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n                }}>\n                    <Tabs\n                        defaultActiveKey=\"home\"\n                        id=\"uncontrolled-tab-example\"\n                        style={{\n                            fontFamily: \"Montserrat, sans-serif\",\n                            fontWeight: \"600\",\n                            color: \"red\",\n                        }}\n                    >\n                        <Tab eventKey=\"home\" title=\"Prescriptions\">\n                            \n                            <div>\n                                <DocPrescription />\n                            </div>\n                            \n                        </Tab>\n                        <Tab eventKey=\"profile\" title=\"Patients\">\n                        <div>\n                                <DocPatients />\n                            </div>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n            </div>{\" \"}\n        </div>\n    );\n};\n\nexport default DocProfile;","import React,{useState , useReducer ,useContext} from \"react\";\nimport './styles.css';\nimport { Card, Button, Form,Row, InputGroup} from \"react-bootstrap\";\nimport ImageTest from \"../../jj.jpg\";\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport { useHistory } from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert';\nfunction Signup() {\n\n\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const onFormSubmit =async e => {\n\n    e.preventDefault();\n    var email = document.getElementById('em'). value;\n    var password = document.getElementById('pass').value;\n    var name =document.getElementById('name').value;\n    try {\n      const responseData = await sendRequest(\n        'http://localhost:5000/api/users/signup',\n        'POST',\n        JSON.stringify({\n          name: name,\n           email: email,\n           password:password\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n\n      auth.login(responseData.user.email,responseData.token);\n      document.getElementById('em'). value=\"\";\n      document.getElementById('pass'). value=\"\";\n      document.getElementById('name'). value=\"\";\n    } catch (err) {}\n \n  }\n  const routeChange= () =>{ \n\n    history.push('/');\n  };\nif(error)\n{\nreturn (\n<Alert style={{ margin:\"0px\", zIndex:\"100\" ,marginLeft:\"auto\", marginRight:\"auto\"}}  variant=\"danger\">\n<Alert.Heading>Login Error</Alert.Heading>\n<p>\n{error}\n</p>\n<hr />\n<div className=\"d-flex justify-content-end\">\n<Button onClick={routeChange} variant=\"outline-danger\">\nTry again\n</Button>\n</div>\n</Alert>)\n}\n\n  return (\n    <div className=\"BGGrad\">\n    <Row className=\"TopMargin\"></Row>\n    <Card\n        // className=\"cont\"\n        bg=\"light\"\n        className=\"MainCard\"\n    >\n        <br />\n        <br />\n        <br />\n        <font color=\"#6e7582\">\n            <i className=\"fas fa-hospital-user fa-8x\"></i>\n        </font>\n        <br />\n      <Card.Body>\n        <Card.Title className=\"heading\"><h2 className=\"CardTitleFont\">Sign Up</h2></Card.Title>\n        <Card.Text>\n          <Form className=\"form-signin\" onSubmit={onFormSubmit}>\n            <Form.Group controlId=\"formBasicFName\">\n            <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-user\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n              <Form.Control  type=\"text\" id=\"name\" placeholder=\"Name\" className=\"FormStyle\" />\n              </InputGroup>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i className=\"fas fa-envelope\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"email\"\n                                        id=\"em\"\n                                        placeholder=\"Email\"\n                                        className=\"FormStyle\"\n                                    />\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-key\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"password\"\n                                        id=\"pass\"\n                                        placeholder=\"Password\"\n                                        className=\"FormStyle\"\n                                    />\n                                </InputGroup>\n                            </Form.Group>\n            <Button   className=\"button1\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{\n                                    backgroundColor: \"#43bfc7\",\n                                    fontFamily: \"Montserrat, sans-serif\",\n                                    fontWeight: \"600\",\n                                }}>Submit</Button>\n          </Form>\n        </Card.Text>\n      </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, {useState , useReducer ,useContext} from \"react\";\nimport { Card, Button,Form, Row, Col} from \"react-bootstrap\";\nimport ImageTest from \"../../jj.jpg\";\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport { Link } from 'react-router-dom';\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport \"../../css/Login.css\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHistory } from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert';\nconst Login =() =>{\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const onFormSubmit =async e => {\n    e.preventDefault();\n    var email = document.getElementById('em'). value;\n    var password = document.getElementById('pass').value;\n    try {\n      const responseData = await sendRequest(\n        'http://localhost:5000/api/users/login',\n        'POST',\n        JSON.stringify({\n          email: email,\n          password: password\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n      auth.login(responseData.user.email, responseData.token);\n    document.getElementById('em'). value=\"\";\n    document.getElementById('pass'). value=\"\";\n  }catch (err) {\n   \n  }\n};\nconst routeChange= () =>{ \n\n                history.push('/');\n              };\nif(error)\n{\n  return (\n  <Alert style={{ margin:\"0px\", zIndex:\"100\" ,marginLeft:\"auto\", marginRight:\"auto\"}}  variant=\"danger\">\n   <Alert.Heading>Login Error</Alert.Heading>\n   <p>\n     {error}\n   </p>\n   <hr />\n   <div className=\"d-flex justify-content-end\">\n     <Button onClick={routeChange} variant=\"outline-danger\">\n       Try again\n     </Button>\n   </div>\n </Alert>)\n}\n\n\n  return (\n    <React.Fragment>\n      \n    <div className=\"BGGrad\">\n    <Row className=\"TopMargin\"></Row>\n    <Card\n        // className=\"cont\"\n        bg=\"light\"\n        className=\"MainCard\"\n    >\n        <br />\n        <br />\n        <br />\n        <font color=\"#6e7582\">\n            <i className=\"fas fa-hospital-user fa-8x\"></i>\n        </font>\n        <br />\n      <Card.Body>\n        <Card.Title className=\"heading\"><h1 className=\"CardTitleFont\">Log In</h1></Card.Title>\n        <Card.Text>\n          <Form className=\"form-signin\" onSubmit={onFormSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n            <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"far fa-envelope\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n              <Form.Control type=\"email\" id=\"em\" placeholder=\"Email\" className=\"FormStyle\" />\n              </InputGroup>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n            <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-key\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n              <Form.Control type=\"password\" id=\"pass\" placeholder=\"Password\" className=\"FormStyle\" />\n              </InputGroup>\n              <br></br>\n              \n              <Row>\n                                    <Col sm={4}>\n                                        <Link\n                                            to=\"/signup\"\n                                            className=\"LinkStyle\"\n                                        >\n                                            \n                                            New Users?\n                                        </Link>\n                                    </Col>\n                                    <Col sm={3} style={{ textAlign: \"center\" }}>\n                                        <Link\n                                            to=\"/doctor/login\"\n                                            className=\"LinkStyle\"\n                                        >\n                                            \n                                            Doctor?\n                                        </Link>\n                                    </Col>\n                                    <Col sm={5} className=\"right\">\n                                        <Link to=\"\" className=\"LinkStyle\">\n                                            \n                                            Forgot Password?\n                                        </Link>\n                                    </Col>\n                                </Row>\n            </Form.Group>\n            <Button  style={{\n                        backgroundColor: \"#43bfc7\",\n                       fontFamily: \"Montserrat, sans-serif\",\n                       fontWeight: \"600\",\n                                }} className=\"button1\"  type=\"submit\">Log In</Button>\n          </Form>\n        </Card.Text>\n      </Card.Body>\n      </Card>\n    </div>\n    </React.Fragment>\n\n    \n  );\n}\n\nexport default Login;\n","import React, {useContext} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport \"../../css/Allergy.css\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport {AuthContext} from '../../shared/util/AuthContext';\n\nconst Allergy = () => {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const placeSubmitHandler=async event =>{\n     event.preventDefault();\n     var from = document.getElementById('AF'). value;\n     var reaction = document.getElementById('AR').value;\n\n    try {\n        await sendRequest(\n            'http://localhost:5000/api/users/allergy',\n            'POST', \n            JSON.stringify({\n              from: from,\n              reaction:reaction,\n               creator: auth.userId\n            }),\n     { 'Content-Type': 'application/json' }\n     );\n     history.push('/');\n  }catch(err){}\n  };\n\n\n\nreturn (\n  <div className=\"BGGradeAllergy\">\n  <div className=\"TopMarginAllergy\"></div>\n\n  <div className=\"box\" id=\"heading\">\n      <h1 className=\"Heading\"> Allergy Form</h1>{\" \"}\n  </div>\n  <Jumbotron className=\"container\" bg-dark>\n      <Form className=\"form-signin\" onSubmit={placeSubmitHandler}>\n          <Form.Group controlId=\"formGroupheart\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Allergy From\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"AF\"\n                  placeholder=\"Allergy From\"\n                  className=\"AllergyFormText\"\n              />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupBP\">\n              <Form.Label className=\"AllergyFormTextLabel\">\n                  Allergy Reaction\n              </Form.Label>\n              <Form.Control\n                  type=\"text\"\n                  id=\"AR\"\n                  className=\"AllergyFormText\"\n                  placeholder=\"Allergy Reaction\"\n              />\n          </Form.Group>\n          <br />\n          <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"AllergyButton\"\n          >\n              Submit\n          </Button>\n      </Form>\n  </Jumbotron>\n</div>\n);\n};\n\nexport default Allergy;","import React,{useState , useReducer ,useContext} from \"react\";\nimport './styles.css';\nimport { Card, Button, Form, InputGroup, Row} from \"react-bootstrap\";\nimport ImageTest from \"../jj.jpg\";\nimport { AuthContext } from '../shared/util/AuthContext';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport \"../css/Login.css\";\nimport { useHistory } from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert';\nfunction DoctorSignup() {\n\n\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const onFormSubmit =async e => {\n\n    e.preventDefault();\n    var email = document.getElementById('em'). value;\n    var password = document.getElementById('pass').value;\n    var name =document.getElementById('name').value;\n    try {\n      const responseData = await sendRequest(\n        'http://localhost:5000/api/doctors/signup',\n        'POST',\n        JSON.stringify({\n          name: name,\n           email: email,\n           password:password\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n\n      auth.doctorlogin(responseData.doctors.email,responseData.token);\n      document.getElementById('em'). value=\"\";\n      document.getElementById('pass'). value=\"\";\n      document.getElementById('name'). value=\"\";\n    } catch (err) {}\n \n  };\n  const routeChange= () =>{ \n\n    history.push('/');\n  };\nif(error)\n{\nreturn (\n<Alert style={{ margin:\"0px\", zIndex:\"100\" ,marginLeft:\"auto\", marginRight:\"auto\"}}  variant=\"danger\">\n<Alert.Heading>Login Error</Alert.Heading>\n<p>\n{error}\n</p>\n<hr />\n<div className=\"d-flex justify-content-end\">\n<Button onClick={routeChange} variant=\"outline-danger\">\nTry again\n</Button>\n</div>\n</Alert>)\n}\n  return (\n    <div className=\"BGGrad\">\n    <Row className=\"TopMargin\"></Row>\n    <Card className=\"MainCard\" style={{}}>\n        <br />\n        <br />\n        <br />\n        <font color=\"#6e7582\">\n            <i className=\"fas fa-hospital-user fa-8x\"></i>\n        </font>\n        <br />\n        <Card.Body>\n                    <Card.Title className=\"CardTitleFont\">\n                        <h2>Doctor Sign Up</h2>\n                    </Card.Title>\n                    <Card.Text>\n                        <Form className=\"form-signin\" onSubmit={onFormSubmit}>\n                            <Form.Group controlId=\"formBasicFName\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-user\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"text\"\n                                        id=\"name\"\n                                        placeholder=\"Name\"\n                                    />\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"far fa-envelope\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"email\"\n                                        id=\"em\"\n                                        placeholder=\"Email\"\n                                    />\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-key\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"password\"\n                                        id=\"pass\"\n                                        placeholder=\"Password\"\n                                    />\n                                      </InputGroup>\n                            </Form.Group>\n                            <Button\n                                className=\"button1\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{\n                                    backgroundColor: \"#43bfc7\",\n                                    fontFamily: \"Montserrat, sans-serif\",\n                                    fontWeight: \"600\",\n                                }}\n                            >\n                                Submit\n                            </Button>\n          </Form>\n        </Card.Text>\n      </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default DoctorSignup;","import React, { useState, useReducer, useContext } from \"react\";\nimport { Card, Button, Form, Row, Col } from \"react-bootstrap\";\nimport ImageTest from \"../jj.jpg\";\nimport { AuthContext } from \"../shared/util/AuthContext\";\nimport { useHttpClient } from \"../shared/hooks/useHttpClient\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Login.css\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst DoctorLogin = () => {\n    const auth = useContext(AuthContext);\n    const history = useHistory();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const onFormSubmit = async (e) => {\n        e.preventDefault();\n        var email = document.getElementById(\"em\").value;\n        var password = document.getElementById(\"pass\").value;\n        try {\n            const responseData = await sendRequest(\n                \"http://localhost:5000/api/doctors/login\",\n                \"POST\",\n                JSON.stringify({\n                    email: email,\n                    password: password,\n                }),\n                {\n                    \"Content-Type\": \"application/json\",\n                }\n            );\n            auth.doctorlogin(responseData.doctors.email, responseData.token);\n            document.getElementById(\"em\").value = \"\";\n            document.getElementById(\"pass\").value = \"\";\n        } catch (err) {}\n    };\n\n    const routeChange = () => {\n        history.push(\"/\");\n    };\n    if (error) {\n        return (\n            <Alert\n                style={{\n                    margin: \"0px\",\n                    zIndex: \"100\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                }}\n                variant=\"danger\"\n            >\n                <Alert.Heading>Login Error</Alert.Heading>\n                <p>{error}</p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                    <Button onClick={routeChange} variant=\"outline-danger\">\n                        Try again\n                    </Button>\n                </div>\n            </Alert>\n        );\n    }\n\n    return (\n        <div className=\"BGGrad\">\n            <Row className=\"TopMargin\"></Row>\n            <Card className=\"MainCard\" bg=\"light\" style={{}}>\n                <br />\n                <br />\n                <br />\n                <font color=\"#6e7582\">\n                    <i className=\"fas fa-hospital-user fa-8x\"></i>\n                </font>\n                <br />\n                <Card.Body>\n                    <Card.Title className=\"CardTitleFont\">\n                        <h1>Doctors Log In</h1>\n                    </Card.Title>\n                    <Card.Text>\n                        <Form className=\"form-signin\" onSubmit={onFormSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"far fa-envelope\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"email\"\n                                        id=\"em\"\n                                        className=\"FormStyle\"\n                                        placeholder=\"Email\"\n                                    />\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"basic-addon1\">\n                                            <i class=\"fas fa-key\"></i>\n                                        </InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"password\"\n                                        id=\"pass\"\n                                        className=\"FormStyle\"\n                                        placeholder=\"Password\"\n                                    />\n                                </InputGroup>\n                                <br></br>\n                                <Row>\n                                    <Col sm={4}>\n                                        <Link\n                                            to=\"/doctor/signup\"\n                                            className=\"LinkStyle\"\n                                        >\n                                            {\" \"}\n                                            New Doctor?{\" \"}\n                                        </Link>\n                                    </Col>\n                                    <Col sm={3} style={{ textAlign: \"center\" }}>\n                                        <Link to=\"/login\" className=\"LinkStyle\">\n                                            {\" \"}\n                                            Patient?{\" \"}\n                                        </Link>\n                                    </Col>\n                                    <Col sm={5} className=\"right\">\n                                        <Link to=\"\" className=\"LinkStyle\">\n                                            {\" \"}\n                                            Forgot Password?{\" \"}\n                                        </Link>\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                            <Button\n                                style={{\n                                    backgroundColor: \"#43bfc7\",\n                                    fontFamily: \"Montserrat, sans-serif\",\n                                    fontWeight: \"600\",\n                                }}\n                                className=\"button1\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                            >\n                                Log In\n                            </Button>\n                        </Form>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default DoctorLogin;","import React, {useEffect,useContext, useState} from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport ImageTest from \"../../jj.jpg\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport \"../../css/PresDisplay.css\";\n\nexport const Hello = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    \n    const [ loadedpres, setLoadedPres] = useState();\n    const userId= auth.userId;\n    const presID=useParams().presID;\n    useEffect(()=> {\n      const fetchPlaces = async() =>{\n        try{\n          const responseData = await sendRequest(\n          `http://localhost:5000/api/places/users/${userId}/prescription/${presID}`\n          );\n          setLoadedPres(responseData.prescription);\n        }\n        catch(err)\n        {}\n      };\n        fetchPlaces();\n      \n    }, [sendRequest, userId, presID]);\n    \n    \n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n            {!isLoading &&loadedpres &&\n        <div className=\"PresShowBG\">\n            <Row className=\"TopMargin\"></Row>\n            <Row style={{ maxWidth: \"98%\", marginLeft: \"1%\" }}>\n                <Col sm={5}>\n                    <Card\n                        style={{\n                            width: \"100%\",\n                            height: \"100%\",\n\n                        }}\n                    >\n                        <Card.Body>\n                        <br />\n                                <br />\n                                <font className=\"ProfilingCardTextUser\">\n                                    <i className=\"fas fa-user fa-9x\"></i>\n                                </font>\n                                {/* <Image\n                                    src={ImageTest}\n                                    className=\"CardImage\"\n                                    roundedCircle\n                                /> */}\n                                <br />\n                                <br />\n                                <br />\n                                <font className=\"ProfilingCardText\">\n                                    <i class=\"fas fa-user-injured fa-2x\"> </i>{\" \"}\n                                </font>\n                                &nbsp;&nbsp;\n                                <h2\n                                    className=\"ProfilingCardText\"\n                                    style={{ display: \"inline\" }}\n                                >\n                                Patient Name :\n                            </h2>\n                            <h2 style={{ display: \"inline\" }}>\n                                 {loadedpres.patname}</h2>\n                            <br />\n                            <br />\n                            <p\n                                    style={{ fontSize: \"20px\" }}\n                                    className=\"ProfilingCardText\"\n                                >\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fas fa-hashtag\"></i> Age :\n                                    </b>{\" \"}\n                                     {loadedpres.age}\n                                <br />\n                                <b>\n                                        {\" \"}\n                                        <i className=\"fas fa-user-md\"></i>{\" \"}\n                                        Doctor :\n                                    </b>{\" \"}\n                                {loadedpres.docID}\n                                <br />\n                                <b>\n                                    {\" \"}\n                                    <i className=\"fas fa-hospital\"></i> Hospital\n                                    Name :\n                                </b>{\" \"}\n                                {loadedpres.hospitalname}\n                                <br />\n                                <b>\n                                    <i className=\"fas fa-calendar-alt\"></i>{\" \"}\n                                    Prescription Date :\n                                </b>{\" \"}\n                                {loadedpres.date}\n                                <br />\n                                <b>\n                                    {\" \"}\n                                    <i className=\"fas fa-info-circle\"></i> \n                                    Note :\n                                </b>{\" \"}\n                                <Badge variant=\"info\">{loadedpres.note}</Badge>\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={7}>\n                <Card\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                padding: \"10px\",\n                            }}\n                            className=\"ProfilingCard\"\n                        >\n                            <font className=\"ProfilingCardText\">\n                                <i class=\"fas fa-prescription fa-7x\"></i>\n                            </font>\n                            <br />\n                            <Row>\n                                <Col sm={1}></Col>\n                                <Col sm={11} className=\"PrescriptionText\">\n                        {loadedpres.meds[0]} : {loadedpres.doze[0]}\n                        <br />\n                        {loadedpres.meds[1]} : {loadedpres.doze[1]}\n                        <br />\n                        {loadedpres.meds[2]} : {loadedpres.doze[2]}\n                        <br />\n                        {loadedpres.meds[3]} : {loadedpres.doze[3]}\n                        <br />\n                        <br />\n                        </Col>\n                            </Row>  \n                    </Card>\n                </Col>\n            </Row>\n        </div>}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState,useContext } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { AuthContext} from '../../util/AuthContext';\nimport {NavLink , Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport \"../../../css/MainNav.css\";\nconst MainNavigation = () => {\n  const auth = useContext(AuthContext);\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  const history = useHistory();\n  const routeChange = () =>{ \n    let path = `/login`; \n    history.push(path);\n  }\n    return(\n      <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n        \n        <ul className=\"nav-links\">\n          \n                        <li>\n    {auth.isLoggedIn && !auth.isDoctor &&( <NavLink className=\"NavbarLinks\" to=\"/vitals\">\n                            <i class=\"fas fa-heartbeat\"></i>\n                            \n                            Add Vitals\n                        </NavLink>)}\n                        </li>\n                        <li>\n    {auth.isLoggedIn && !auth.isDoctor &&(<NavLink className=\"NavbarLinks\" to=\"/doctors\">\n                            <i class=\"fas fa-user-md\"></i>\n                            \n                            Find Doctors\n                        </NavLink>)}\n                        </li>\n                        <li>\n    {auth.isLoggedIn && !auth.isDoctor &&(<NavLink className=\"NavbarLinks\" to=\"/allergy\">\n                            <i class=\"fas fa-bacteria\"></i>\n                            {\"   \"}\n                            Add Your Allergies\n                        </NavLink>)}\n                        </li>\n                        <li>\n        {auth.isLoggedIn && auth.isDoctor && (<NavLink className=\"NavbarLinks\" to=\"/addprescription\">\n                            <i class=\"fas fa-prescription\"> </i>\n                           \n                            Add Prescription\n                        </NavLink>)}\n                        </li>\n      {auth.isLoggedIn && !auth.isDoctor && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n       {auth.isLoggedIn && auth.isDoctor && (\n        <li>\n          <button onClick={auth.doctorlogout}>LOGOUT</button>\n        </li>\n      )}\n       {!auth.isLoggedIn && (\n        <li>\n          <button onClick={routeChange}>LOGIN</button>\n        </li>\n      )}\n    </ul>\n\n  \n        </nav>\n      </SideDrawer>\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" className=\"BGGrade\">\n  <Navbar.Brand className=\"MediTechLogo\" href=\"/home\">MediTech</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\"></Nav>\n    <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n    <Nav className=\"main-navigation__header-nav\">\n    {auth.isLoggedIn && auth.isDoctor && (<NavLink className=\"NavbarLinks\" to=\"/addprescription\">\n                            <i class=\"fas fa-prescription\"> </i>\n                            {\"   \"}\n                            Add Prescription\n                        </NavLink>)}\n    {auth.isLoggedIn && !auth.isDoctor &&( <Link className=\"NavbarLinks\" to=\"/vitals\">\n                            <i class=\"fas fa-heartbeat\"></i>\n                            {\"   \"}\n                            Add Vitals\n                        </Link>)}\n    {auth.isLoggedIn && !auth.isDoctor &&(<NavLink className=\"NavbarLinks\" to=\"/doctors\">\n                            <i class=\"fas fa-user-md\"></i>\n                            {\"   \"}\n                            Find Doctors\n                        </NavLink>)}\n    {auth.isLoggedIn && !auth.isDoctor &&(<NavLink className=\"NavbarLinks\" to=\"/allergy\">\n                            <i class=\"fas fa-bacteria\"></i>\n                            {\"   \"}\n                            Add Your Allergies\n                        </NavLink>)}\n                        {auth.isLoggedIn &&  !auth.isDoctor &&(<Button  onClick={auth.logout} variant=\"warning\">Logout</Button>)}\n    {auth.isLoggedIn && auth.isDoctor &&(<Button onClick={auth.doctorlogout} variant=\"warning\">Logout</Button>)}\n    {!auth.isLoggedIn  &&(<Button onClick={routeChange}  variant=\"warning\">Login</Button>)}\n    </Nav>\n    \n  </Navbar.Collapse>\n</Navbar>\n</React.Fragment>\n    );\n\n};\n \nexport default MainNavigation;","import { createContext } from 'react';\n\nexport const DocContext = createContext({\n  isLoggedIn: false,\n  docId:null,\n  login: () => {},\n  logout: () => {}\n});","import React, { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from 'react-router-dom';\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Table from \"react-bootstrap/Table\";\n\nimport {AuthContext} from '../shared/util/AuthContext';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport { Footer } from '../shared/components/UIElements/Footer';\nimport \"../css/AddPres.css\";\nconst DateInputer = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    return (\n        <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n        />\n    );\n};\n\nfunction InputingPers() {\n    const auth = useContext(AuthContext);\n    const history = useHistory();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const onFormSubmit =async e => {\n  \n      e.preventDefault();\n\n      var patname = document.getElementById('patname'). value;\n      var patID = document.getElementById('patID').value;\n      var docID =document.getElementById('docID').value;\n      var hospitalname = document.getElementById('hospitalname'). value;\n      var date = document.getElementById('date').value;\n      var note =document.getElementById('note').value;\n      var age =document.getElementById('age').value;\n      var meds=[];\n      var doze=[];\n      for(let i = 1; i<5; i++)\n      {\n          let m= 'm'+i;\n          let d='d'+i;\n          meds.push(document.getElementById(m).value);\n          doze.push(document.getElementById(d). value);\n      }\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/places/prescription',\n          'POST',\n          JSON.stringify({\n            patID:patID,\n            patname: patname,\n            date:date,\n            docID: docID,\n            hospitalname:hospitalname,\n            note:note,\n            age:age,\n            meds:meds,\n            doze:doze\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        history.push('/');\n       /* document.getElementById('patname'). value=\"\";\n            document.getElementById('patID').value=\"\";\n        document.getElementById('docID').value=\"\";\n        document.getElementById('hospitalname'). value=\"\";\n        document.getElementById('date').value=\"\";\n      document.getElementById('note').value=\"\";\n       document.getElementById('age').value=\"\";\n       document.getElementById('m1').value=\"\";\n       document.getElementById('m2').value=\"\";\n       document.getElementById('m3').value=\"\";\n       document.getElementById('m4').value=\"\";\n       document.getElementById('d1').value=\"\";\n       document.getElementById('d2').value=\"\";\n       document.getElementById('d3').value=\"\";\n       document.getElementById('d4').value=\"\";*/\n        }catch (err) {}\n   \n    }\n    return (\n        <div className=\"AddPresFullBody\">\n            <Row>\n                <Col sm={3}> </Col>\n                <Col sm={6}>\n                    <Card className=\"AddPresHeaderBox\">\n                        <Card.Title className=\"AddPresHeader\">\n                            Prescription Form\n                        </Card.Title>\n                    </Card>\n                </Col>\n                <Col sm={3}> </Col>\n            </Row>\n            <br />\n            <Card className=\"AddPresBodyBox\">\n                <Form onSubmit={onFormSubmit}>\n                    <Form.Row>\n                    <Col sm={6} className=\"AddPresText\">\n                            Patient Full Name\n                            <br />\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i class=\"fas fa-user\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"patname\" className=\"AddPresText\" placeholder=\"Patient Name\" />\n                            </InputGroup>\n                        </Col>\n                        <Col sm={6} className=\"AddPresText\">\n                            Patient's ID\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i class=\"fas fa-hashtag\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"patID\" className=\"AddPresText\" placeholder=\"Patient ID\" />\n                            </InputGroup>\n                        </Col>\n                    </Form.Row>\n                    <br></br>\n                    <Form.Row>\n                    <Col sm={6} className=\"AddPresText\">\n                            Doctor ID\n                            <br />\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i className=\"fas fa-user-md\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"docID\" placeholder=\"Doctor ID\"\n                                    className=\"AddPresText\" />\n                            </InputGroup>\n                        </Col>\n                        <Col sm={6} className=\"AddPresText\">\n                            Hospital Name\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i class=\"fas fa-hospital\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"hospitalname\" placeholder=\"Hospital Name (if any)\"\n                                    className=\"AddPresText\" />\n                            </InputGroup>\n                        </Col>\n                    </Form.Row>\n                    <br></br>\n                    <Form.Row>\n                    <Col sm={3} className=\"AddPresText\">\n                            Date of Diagnosis\n                            <br />\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i className=\"fas fa-calendar-plus\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"date\" />\n                            </InputGroup>\n                        </Col>\n                        <Col sm={3}></Col>\n                        <Col sm={1} className=\"AddPresText\">\n                            Age\n                            <br />\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i className=\"fas fa-calendar\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"age\"  placeholder=\"Age\"\n                                    className=\"AddPresText\" />\n                            </InputGroup>\n                        </Col>\n                    </Form.Row>\n                    <br></br>\n                    \n\n                    <br></br>\n                    <Form.Row style={{ marginTop: \"10px\" }}>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th className=\"AddPresText\">#</th>\n                                    <th className=\"AddPresText\"\n                                     style={{ textAlign: \"center\" }}>\n                                        Medicine Name\n                                    </th>\n                                    <th className=\"AddPresText\"\n                                    style={{ textAlign: \"center\" }}>\n                                        Doze\n                                    </th>\n                                    <th> </th>\n                                </tr>\n                            </thead>\n                            <tbody>  \n                            <tr>\n        <td className=\"AddPresText\">1</td>\n        <td>\n            <Form.Control id=\"m1\" className=\"AddPresText\" placeholder=\"Medicine\" />\n        </td>\n        <td>\n            <Form.Control id=\"d1\" className=\"AddPresText\" placeholder=\"Times per Day X Number of Days\" />\n        </td>\n \n    </tr>\n    <tr>\n        <td className=\"AddPresText\">2</td>\n        <td>\n            <Form.Control id=\"m2\" className=\"AddPresText\" placeholder=\"Medicine\" />\n        </td>\n        <td>\n            <Form.Control id=\"d2\" className=\"AddPresText\" placeholder=\"Times per Day X Number of Days\" />\n        </td>\n \n    </tr>\n    <tr>\n        <td className=\"AddPresText\">3</td>\n        <td>\n            <Form.Control id=\"m3\" className=\"AddPresText\" placeholder=\"Medicine\" />\n        </td>\n        <td>\n            <Form.Control id=\"d3\" className=\"AddPresText\" placeholder=\"Times per Day X Number of Days\" />\n        </td>\n \n    </tr>\n    <tr>\n        <td className=\"AddPresText\">4</td>\n        <td>\n            <Form.Control id=\"m4\" className=\"AddPresText\" placeholder=\"Medicine\" />\n        </td>\n        <td>\n            <Form.Control id=\"d4\" className=\"AddPresText\" placeholder=\"Times per Day X Number of Days\" />\n        </td>\n \n    </tr>\n                            </tbody>\n                        </Table>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col sm={11} className=\"AddPresText\">\n                            Note for Patient\n                            <br />\n                            <InputGroup>\n                                <InputGroup.Text>\n                                    <i class=\"far fa-sticky-note\"></i>\n                                </InputGroup.Text>\n                                <Form.Control id=\"note\" className=\"AddPresText\" placeholder=\"Note (If Any)\" />\n                            </InputGroup>\n                        </Col>\n                    </Form.Row>\n                    <br></br>\n                    <Button  className=\"AddPresButton\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Card>\n            </div>\n        \n    );\n}\n\nexport default InputingPers;","import React,{ useEffect, useState,useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport { useHistory } from 'react-router-dom';\nimport image from '../../jj.jpg';\nimport \"../../css/DoctorListCard.css\";\nconst DoctorCard = props => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedDoctors, setLoadedDoctors] = useState();\n    const userId= auth.userId;\n    const history = useHistory();\n    \n    const addDoc = async ()=>{\n         \n              try {\n                const responseData = await sendRequest(\n                    `http://localhost:5000/api/users/doctor/${props.email}`,\n                    'POST',\n                    JSON.stringify({\n                      doctor:props.email,\n                      patient:userId\n                    }),\n                    {\n                      'Content-Type': 'application/json'\n                    }\n                  );\n                setLoadedDoctors(responseData.doctors);\n                history.push('/doctors');\n              } catch (err) {\n        console.log(err);\n              }\n            };\n            const routeChange2 = () =>{ \n                let path = `/appointment/${props.email}`; \n                history.push(path);\n              }\n        \n    return (\n        <div>\n           <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-user-md fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"2rem\", color: \"#195a65\" }}>\n                        {props.name}\n                    </Card.Title>\n                    <font style={{ fontSize: \".8rem\" }}>\n                        {props.email}\n                    </font>\n                    <br></br>\n                    <br></br>\n                    <Button\n                        variant=\"info\"\n                        className=\"DoctorListButtonDoctor\"\n                        onClick={addDoc}\n                    >\n                        Add to <b>Your Doctor</b>\n                    </Button>{' '}\n                    <Button variant=\"success\" className=\"DoctorListButtonAppointment\" onClick={routeChange2}>\n                        Book An Appointment\n                    </Button>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default DoctorCard;","import React from 'react';\nimport JJ from \"../../jj.jpg\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\nimport DoctorCard from './DoctorCard';\n\n\nconst DocList = props => {\n    if(props.items.length === 0){ \n        console.log(props.items.length);\n    console.log(props.items);\n        return(\n         <Card className=\"center\">\n             <h2> NO Doctors FOUND </h2>\n         </Card>\n        );\n    }\n    console.log(props.items.length);\n    console.log(props.items);\n    return(  \n        <CardDeck style={{\n            margin: \"0.6rem\",\n            marginBottom: \"0px\",\n            paddingBottom: \"0.7rem\",\n        }}>\n    { props.items.map( doc => (\n         <DoctorCard  \n        id={doc.id} \n        image= {JJ} \n        name={doc.name} \n        email={doc.email} />\n    ))\n\n    }\n    </CardDeck>\n);\n    \n    \n};\n\nexport default DocList;","import React, { useEffect, useState,useContext } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport DocList from './doctors';\nimport { useHttpClient } from '../../shared/hooks/useHttpClient';\nimport { AuthContext } from '../../shared/util/AuthContext';\nimport \"../../css/DoctorList.css\";\n\nconst Doctors = () =>{\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedDoctors, setLoadedDoctors] = useState();\n    \n    useEffect(() => {\n      const fetchUsers = async () => {\n   \n        try {\n          const responseData = await sendRequest('http://localhost:5000/api/doctors/all');\n  \n  \n          setLoadedDoctors(responseData.doctors);\n        } catch (err) {\n  console.log(err);\n        }\n      };\n      fetchUsers();\n    }, [sendRequest]);\n\n\n\n  return (\n    <React.Fragment>\n              <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n    <>\n    <div className=\"DoctorListHeading\">Doctors List</div>\n    {!isLoading &&loadedDoctors && \n    <div className=\"BGGradDoctorList\">\n    <DocList items={loadedDoctors} />\n    </div>}\n    </>\n    </React.Fragment>\n         \n  );\n};\n\n\nexport default Doctors;\n\n\n\n","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Row,CardColumns, CardDeck, CardGroup } from \"react-bootstrap\";\nimport VitalCard from './vitalCard';\nimport Chart from '../shared/components/UIElements/Chart';\nimport \"../css/DoctorListCard.css\";\n \nconst VitalList = props =>{\n    var sugar=[]\nvar BPS=[];\nvar BPD=[];\nvar temperature=[];\nvar weight=[];\nvar height=[];\nvar pulse=[];\n\n        for( let i =0 ; i<7;i++)\n        {\n        if(props.items.length === i)\n        { \n            for(let j=0; j<7-i; j++ )\n            {\n                sugar.push(\"100\");\n                BPS.push(\"120\");\n                BPD.push(\"80\");\n                temperature.push(\"37\");\n                height.push(\"0\");\n                weight.push(\"0\");\n                pulse.push(\"80\");\n            }  \n            for(let k=0; k<i; k++)\n            {\n                sugar.push(props.items[k].sugar);\n                BPS.push(props.items[k].BPS);\n                BPD.push(props.items[k].BPD);\n                temperature.push(props.items[k].temperature);\n                height.push(props.items[k].height);\n                weight.push(props.items[k].weight);\n                pulse.push(props.items[k].pulse);\n\n            }  \n        }\n    }\n    if(props.items.length.length >=7)\n    {\n        props.items.length=props.items.length.slice(Math.max(props.items.length.length - 7, 0))\n    }\n\n\n\n\n\n\n\nsugar.push(\"Sugar\");\nBPS.push(\"Blood Pressure Systolic\");\n BPD.push(\"Blood Pressure Diastolic\");\n temperature.push(\"Temperature\");\nheight.push(\"Height\");\nweight.push(\"Weight\");\npulse.push(\"Pulse\");\n                sugar.push(100);\n                BPS.push(120);\n                BPD.push(80);\n                temperature.push(37);\n                height.push(0);\n                weight.push(0);\n                pulse.push(80);\n    return(\n        \n        <>\n        <Row>\n            <Col sm={6}\n            >\n                <Card style={{\n                    \n                        width: \"90%\",\n                        height: \"24rem\",\n                       marginLeft: \"0.8rem\",\n                       marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                       \n                        \n\n                    }}>\n                    <Chart  points={sugar} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={pulse} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={BPS} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={BPD} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={temperature} />\n                </Card>\n            </Col>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={height} />\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={6}>\n                <Card\n                    style={{\n                        width: \"90%\",\n                        height: \"24rem\",\n                        marginLeft: \"0.8rem\",\n                        marginRight: \"0.8rem\",\n                        marginTop: \"0.8rem\",\n                    }}\n                >\n                    <Chart points={weight} />\n                </Card>\n            </Col>\n        </Row>\n    </>\n    );\n};\n export default VitalList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport VitalList from './vitalsList';\nimport { AuthContext } from '../shared/util/AuthContext';\nimport '../css/pat.css';\nconst PatientVitals = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\nconst [ loadedvital, setLoadedVital] = useState();\nconst userId= useParams().patID;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n      const responseData = await sendRequest(\n      `http://localhost:5000/api/places/users/${userId}/vitals`\n      );\n      console.log(responseData.vitals);\n      setLoadedVital(responseData.vitals);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\n\n\nreturn (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <div className=\"BGGradient\">\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedvital && <VitalList items={loadedvital}  />}\n  </div>\n  </React.Fragment>\n  );\n  \n\n};\nexport default PatientVitals;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CardDeck } from \"react-bootstrap\";\nimport \"./css/Footer.css\";\n\nexport const Footer = () => { \n    return (\n        <div className=\"FooterBody\">\n            <Row>\n                <Col sm={1}> </Col>\n                <Col sm={5}>\n                    <font className=\"FooterMissionHeading\"> Our Mission </font>\n                    <hr className=\"Mission\" />\n                    \n                    <font className=\"FooterMissionText\">\n                        {\" \"}\n                        Everybody wants to remain healthy and keep track of their health, yet nobody wants to do the cumbersome task of managing the records. We have come to your rescue. We have the account of all the doctors, your complete medical history, and your daily vitals depicted as interactive graphs so that tracking your health is now a child's play.\n                    </font>\n                    <br/>\n                    <br/>\n                </Col>\n                <Col sm={2}></Col>\n                <Col sm={3}>\n                    <font className=\"FooterTeamHeading\"> Team CodeKar </font>\n                    <hr className=\"Team\" />\n                    \n                    <font className=\"FooterTeamText\">\n                        Jyotirmay Jain\n                        <br />\n                        Parth Mittal\n                        <br />\n                        Abhinav Goel\n                        <br />\n                        Varnika Hotwani\n                        {/* <Row>\n                            <Col sm={6}>Jyotirmay Jain</Col>\n                            <Col sm={6}>Parth Mittal</Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6}>Abhinav Goel</Col>\n                            <Col sm={6}>Varnika Hotwani</Col>\n                        </Row> */}\n                    </font>\n                </Col>\n                <Col sm={1}> </Col>\n            </Row>\n        </div>\n    );\n};\n","import { config, useSpring } from \"@react-spring/core\";\nimport { animated } from \"@react-spring/web\";\nimport React, { useState } from \"react\";\n\nfunction Animation(props) {\n    const [flip, set] = useState(false);\n    const { number } = useSpring({\n        reset: false,\n        // reverse: flip,\n        from: { number: 10 },\n        number: props.numbering,\n        delay: 100,\n        config: config.molasses,\n        onRest: () => set(!flip),\n    });\n\n    return (\n        <>\n            <animated.div>{number.to((n) => n.toFixed())}</animated.div>\n        </>\n    );\n}\nexport default Animation;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport MedicalBG from \"./Meditech.png\";\nimport PageBG from \"./Meditech.png\";\nimport PageBG2 from \"./Meditech FP Final-01.png\";\nimport PageBG3 from \"./Meditech FP Final-2-01.png\";\nimport Row from \"react-bootstrap/Row\";\nimport { Footer } from \"./Footer\";\nimport Image from \"react-bootstrap/Image\";\nimport DoctorFP from \"./DoctorFP.jpeg\";\nimport DatebaseFP from \"./DatabaseFP.jpeg\";\nimport \"./css/FrontPage.css\";\nimport Animation from \"./Animation\";\nimport Fade from \"react-reveal/Fade\";\nimport { Carousel } from \"react-bootstrap\";\n\nexport const FrontPage = () => {\n    return (\n        <div className=\"FPMainDiv\">\n            <div style={{ minHeight: \"80vh\" }}>\n                <div className=\"carousel\">\n                    <Carousel>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100 imgcarousel\"\n                                src={PageBG}\n                                alt=\"First slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100 imgcarousel\"\n                                src={PageBG2}\n                                alt=\"Second slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100 imgcarousel\"\n                                src={PageBG3}\n                                alt=\"Third slide\"\n                            />\n                        </Carousel.Item>\n                    </Carousel>\n                </div>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <Card className=\"FPMainCard\">\n                    {/* <h1>Hello</h1> */}\n                    <Row>\n                        <Col\n                            sm={4}\n                            style={{\n                                textAlign: \"center\",\n                            }}\n                        >\n                            <Fade left>\n                                <div className=\"FPNumberingCards\">\n                                    <br />\n                                    <i\n                                        className=\"fas fa-hospital fa-3x\"\n                                        id=\"icon\"\n                                    ></i>\n                                    <h3 className=\"FPIconText\">\n                                        <br />\n                                        <Animation numbering={1000} />\n                                        Hospitals registered\n                                    </h3>\n                                </div>\n                            </Fade>\n                        </Col>\n                        <Col\n                            sm={4}\n                            style={{\n                                textAlign: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Fade top>\n                                <div className=\"FPNumberingCards\">\n                                    <br />\n                                    <i\n                                        className=\"fas fa-user fa-3x\"\n                                        id=\"icon\"\n                                    ></i>\n                                    <h3 className=\"FPIconText\">\n                                        <br />\n                                        <Animation numbering={1000000} />\n                                        Patients registered\n                                    </h3>\n                                </div>\n                            </Fade>\n                        </Col>\n                        <Col\n                            sm={4}\n                            style={{\n                                textAlign: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Fade right>\n                                <div className=\"FPNumberingCards\">\n                                    <br />\n                                    <i\n                                        className=\"fas fa-user-md fa-3x\"\n                                        id=\"icon\"\n                                    ></i>\n                                    <h3 className=\"FPIconText\">\n                                        <br />\n                                        <Animation numbering={1000} />\n                                        Doctors registered\n                                    </h3>\n                                </div>\n                            </Fade>\n                        </Col>\n                    </Row>\n\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                </Card>\n\n                <div className=\"FPAboutUs\">\n                    <Row>\n                        <Col sm={4}>\n                            <Fade left>\n                                <Image\n                                    src={DoctorFP}\n                                    fluid\n                                    rounded\n                                    className=\"FPAboutUsImage\"\n                                />\n                            </Fade>\n                        </Col>\n                        <Col sm={1}></Col>\n                        <Col sm={7}>\n                            <Fade right>\n                                <font className=\"FPAboutUsHeading\">\n                                    CODEKAR\n                                </font>\n                                <hr className=\"AboutUs\" />\n                                <p className=\"FPAboutUsText\">\n                                    We are a team of four tech enthusiasts\n                                    striving to solve the problems of the world\n                                    and benefit the society. We want to put\n                                    technology to its best use to make people's\n                                    lives easier and the earth a better place to\n                                    live.\n                                </p>\n                            </Fade>\n                        </Col>\n                    </Row>\n                </div>\n\n                <div className=\"FPFeatures\">\n                    <div className=\"FPFeaturesHeading\">Our Features</div>\n                    <hr className=\"Features\" />\n\n                    <div className=\"FPFeaturesCard\">\n                        <Row>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade left>\n                                    <i\n                                        className=\"fas fa-heartbeat fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        We have a system to monitor your daily\n                                        vitals like blood pressure, blood sugar\n                                        levels, height, weight, and heart rate\n                                        through which you have a good idea of\n                                        your current health at all times. Vitals\n                                        are present as interactive graphs to you\n                                        and your doctor, so your health is\n                                        always in check.\n                                    </font>\n                                    <br />\n                                    <br />\n                                    <br />\n                                </Fade>\n                            </Col>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade top>\n                                    <i\n                                        className=\"fas fa-bacteria fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        Now no need to remember all your\n                                        allergies as we have the data handy for\n                                        you. We maintain a database of your\n                                        allergies which will help you remain\n                                        cautious of the potential dangers.\n                                        Moreover, your allergies are visible to\n                                        the doctor as well, so he can prescribe\n                                        medicines accordingly.\n                                    </font>\n                                    <br />\n                                    <br />\n                                    <br />\n                                </Fade>\n                            </Col>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade right>\n                                    <i\n                                        className=\"fas fa-prescription fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        We save all of your previous\n                                        prescriptions to our electronic medical\n                                        record system, so now you don't have to\n                                        carry them to the doctor. These are\n                                        always easily accessible to you and your\n                                        doctor which helps in a good diagnosis\n                                        of any problem you may have. It also\n                                        helps to keep track of the required\n                                        medicine dosage.\n                                    </font>\n                                </Fade>\n                            </Col>\n                        </Row>\n                        <div style={{ height: \"4rem\" }}></div>\n                        <Row>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade left>\n                                    <i\n                                        className=\"fas fa-stethoscope fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        We save all of your doctors under a\n                                        separate section, so you don't have to\n                                        search them in the ocean of doctors.\n                                        With this feature, it is easy to find\n                                        them and get their details to contact\n                                        them whenever required.\n                                    </font>\n                                    <br />\n                                    <br />\n                                    <br />\n                                </Fade>\n                            </Col>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade bottom>\n                                    <i\n                                        className=\"fas fa-file-medical fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        Using this platform, you can easily book\n                                        an appointment with any doctor with just\n                                        a click from the comfort of your home.\n                                    </font>\n                                    <br />\n                                    <br />\n                                    <br />\n                                </Fade>\n                            </Col>\n                            <Col sm={4} className=\"FPFeaturesColumm\">\n                                <Fade right>\n                                    <i\n                                        className=\"fas fa-search fa-3x\"\n                                        id=\"iconFeatures\"\n                                    ></i>\n                                </Fade>\n                                <br />\n                                <br />\n                                <Fade right>\n                                    <font className=\"FPFeaturesText\">\n                                        You can search for your complete medical\n                                        history, all prescriptions, vitals,\n                                        allergies, and doctors from our database\n                                        with great ease. Everything is now at\n                                        your fingertips, making your life easier\n                                        and more organized.\n                                    </font>\n                                </Fade>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Akira from \"../jj.jpg\";\nimport \"../css/DoctorListCard.css\";\n\n\nconst AllergyCard = (props) => {\n    return (\n        <div>\n            <Card border=\"info\" className=\"DoctorListCards\">\n                <br />\n                <font className=\"DoctorIcon\">\n                    <i className=\"fas fa-bacteria fa-9x\"></i>\n                </font>\n                <Card.Body>\n                    <Card.Title style={{ fontSize: \"2rem\", color: \"#195a65\" }}>\n                        Allergy\n                    </Card.Title>\n                    <Card.Text>\n                        Substance: {props.from}\n                        Reaction:{props.reaction}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default AllergyCard;","import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\nimport AllergyCard from './allergycard';\n\n\n\nconst AllergyList = props =>{\n    if( props.items.length === 0)\n    {\n        console.log(props.items.length);\n        console.log(props.items);\n        return (\n        <div className=\" place-list centre\">\n            <Card>\n                <h2> No Allergy Found.</h2>\n                \n            </Card>\n        </div>\n        );\n    }\n    console.log(props.items.length);\n        console.log(props.items);\n    return(\n    <CardDeck>\n    {props.items.map( v=> (\n    <AllergyCard\n    id={v.id}\n    from={v.from}\n    reaction={v.reaction}\n    creator ={v.creator}\n    />))}\n    </CardDeck> \n\n    );\n};\n export default AllergyList;","import React, {useEffect,useContext, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../shared/hooks/useHttpClient';\nimport ErrorModal from '../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport AllergyList from './allergyList';\nimport { AuthContext } from '../shared/util/AuthContext';\nconst PatientAllergy = () =>{\n    const auth = useContext(AuthContext);\nconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n \nconst [ loadedAllergy, setLoadedAllergy] = useState();\nconst userId= useParams().patID;\n\nuseEffect(()=> {\n  const fetchPlaces = async() =>{\n    try{\n        const responseData = await sendRequest(\n            `http://localhost:5000/api/places/users/${userId}/allergies`\n            );\n            setLoadedAllergy(responseData.allergies);\n    }\n    catch(err)\n    {}\n  };\n    fetchPlaces();\n  \n}, [sendRequest, userId]);\n\n\n\nreturn (\n    <React.Fragment>\n      \n      <ErrorModal error={error} onClear={clearError} />\n      <div className=\"BGGradient\">\n     {isLoading && (<div className=\"center\">  <LoadingSpinner  /></div>)}\n  {!isLoading &&loadedAllergy && <AllergyList items={loadedAllergy}  />}\n  </div>\n  </React.Fragment>\n  );\n  \n\n};\nexport default PatientAllergy ;","import React, { useContext, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./vitals.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient\";\nimport { AuthContext } from \"../../shared/util/AuthContext\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"../../css/Allergy.css\";\nconst Appointment = () => {\n    const auth = useContext(AuthContext);\n    const history = useHistory();\n    const docId = useParams().docID;\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [show, setShow] = useState(false);\n\n    const placeSubmitHandler = async (event) => {\n        event.preventDefault();\n        var date = document.getElementById(\"date\").value;\n        var name = document.getElementById(\"name\").value;\n        var email = document.getElementById(\"email\").value;\n        var docEmail = docId;\n        try {\n            await sendRequest(\n                \"http://localhost:5000/api/users/appointment\",\n                \"POST\",\n                JSON.stringify({\n                    date: date,\n                    name: name,\n                    patEmail: email,\n                    docEmail: docEmail,\n                }),\n                { \"Content-Type\": \"application/json\" }\n            );\n            setShow(true);\n            document.getElementById(\"date\").value = \"\";\n            document.getElementById(\"name\").value = \"\";\n            document.getElementById(\"email\").value = \"\";\n        } catch (err) {}\n    };\n\n    const routeChange = () => {\n        setShow(false);\n        history.push(\"/home\");\n    };\n\n    return (\n        <React.Fragment>\n            <Alert\n                style={{\n                    margin: \"0px\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                }}\n                show={show}\n                variant=\"success\"\n            >\n                <Alert.Heading>How's it going?!</Alert.Heading>\n                <p>\n                    The Appointment Mail has been sent to the Doctor, Wait for\n                    his/her revert.\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                    <Button onClick={routeChange} variant=\"outline-success\">\n                        Head back to home\n                    </Button>\n                </div>\n            </Alert>\n            <div className=\"BGGradeAllergy\">\n                <div className=\"TopMarginAllergy\"></div>\n\n                <div className=\"box\" id=\"heading\">\n                    <h1 className=\"Heading\"> Appointment Form</h1>{\" \"}\n                </div>\n                <Jumbotron className=\"container\" bg-dark>\n                    <Form className=\"form-signin\" onSubmit={placeSubmitHandler}>\n                        <Form.Group controlId=\"formGroupheart\">\n                            <Form.Label className=\"AllergyFormTextLabel\">\n                                Patient Name\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                id=\"name\"\n                                placeholder=\"Patient Name\"\n                                className=\"AllergyFormText\"\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGroupBP\">\n                            <Form.Label className=\"AllergyFormTextLabel\">\n                                Patient Email ID\n                            </Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Patient Email ID\"\n                                className=\"AllergyFormText\"\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGroupsugar\">\n                            <Form.Label className=\"AllergyFormTextLabel\">\n                                Date\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                id=\"date\"\n                                placeholder=\"Date (DD/MM/YYYY)\"\n                                className=\"AllergyFormText\"\n                            />\n                        </Form.Group>\n\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"AllergyButton\"\n                        >\n                            Submit\n                        </Button>\n                    </Form>\n                </Jumbotron>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Appointment;\n","import React, { useState, useCallback,useEffect} from 'react';\n\nimport { BrowserRouter as Router, Route,Redirect, Switch } from 'react-router-dom';\nimport Users from './users/pages/Users';\nimport Vitals from './users/pages/vitals';\nimport Profile from './users/pages/profile';\nimport DocProfile from'./doctors/DocProfile';\nimport Signup from './users/pages/Signup';\nimport Login from './users/pages/Login';\nimport Allergy from './users/pages/addAllergy';\nimport DoctorSignup from './doctors/DoctorSignup';\nimport DoctorLogin from './doctors/DoctorLogin';\nimport {Hello} from './users/pages/prescriptiondisplay';\nimport MainNavigation from './shared/components/navigation/MainNavigation';\nimport { AuthContext } from './shared/util/AuthContext';\nimport { DocContext } from './shared/util/DocContext';\nimport InputingPers from './doctors/addprescription';\nimport Doctors from './users/pages/DoctorList';\nimport PatientVitals from './doctors/userVitals';\nimport {Footer} from './Footer';\nimport {FrontPage} from './FrontPage';\nimport PatientAllergy from './doctors/userAllergy';\nimport Appointment from './users/pages/Appointment';\nlet logoutTimer;\n\nfunction App() {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\nconst [userId, setUserId] = useState (false);\nconst [isDoctor, setIsDoctor]=useState (false);\n\nconst login = useCallback ((uid, token,expirationDate)=> {\n  setToken (token);\n  setUserId(uid);\n  const tokenExpirationDate =\n  expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n  setTokenExpirationDate(tokenExpirationDate);\n  localStorage.setItem(\n  'userData',\n  JSON.stringify({\n    userId: uid,\n    token: token,\n    expiration: tokenExpirationDate.toISOString()\n  })\n);\n}, []);\n\n\nconst logout = useCallback (()=> {\n  setToken (null);\n  setTokenExpirationDate(null);\n  setUserId(null);\n  localStorage.removeItem('userData');\n},[]);\n\nuseEffect(() => {\n  const storedData = JSON.parse(localStorage.getItem('userData'));\n  if (\n    storedData &&\n    storedData.token &&\n    new Date(storedData.expiration) > new Date()\n  ) {\n    login(storedData.userId, storedData.token, new Date(storedData.expiration));\n  }\n}, [login]);\n\nconst doctorlogin = useCallback ((uid, token,expirationDate)=> {\n  setToken (token);\n  setIsDoctor (true);\n  setUserId(uid);\n  const tokenExpirationDate =\n  expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n  setTokenExpirationDate(tokenExpirationDate);\n  localStorage.setItem(\n  'docData',\n  JSON.stringify({\n    userId: uid,\n    token: token,\n    expiration: tokenExpirationDate.toISOString()\n  })\n);\n}, []);\n\nconst doctorlogout = useCallback (()=> {\n  setToken (null);\n  setIsDoctor (false);\n  setTokenExpirationDate(null);\n  setUserId(null);\n  localStorage.removeItem('docData');\n},[]);\n\nuseEffect(() => {\n  const storedData = JSON.parse(localStorage.getItem('docData'));\n  if (\n    storedData &&\n    storedData.token &&\n    new Date(storedData.expiration) > new Date()\n  ) {\n    doctorlogin(storedData.userId, storedData.token, new Date(storedData.expiration));\n  }\n}, [doctorlogin]);\n\n// TO DO PARTICULAR PATIENT\n// DOC PROFILE\n// TO DO Photo upload\nlet routes;\n\nif(isDoctor){\n  if (token) {\n    routes = (\n      <Switch>\n      <Route path=\"/home\" exact>\n        <DocProfile />\n      </Route>\n      <Route path=\"/addprescription\" exact>\n        <InputingPers />\n      </Route>\n      <Route path=\"/prescriptions/:presID\" exact>\n      <Hello />\n    </Route>\n    <Route path=\"/patients/:patID\" exact>\n      <PatientVitals />\n    </Route>\n    <Route path=\"/allergy/:patID\" exact>\n      <PatientAllergy />\n    </Route>\n      <Redirect to=\"/home\" />\n  \n    </Switch>\n    );\n  }\n  else{\n    routes =(\n      <Switch>\n          <Route path=\"/\" exact>\n        <FrontPage />\n      </Route>\n      <Route path=\"/login\" exact>\n        <Login />\n      </Route>\n      <Route path=\"/doctor/signup\" exact>\n        <DoctorSignup />\n      </Route>\n      <Route path=\"/doctor/login\" exact>\n        <DoctorLogin />\n      </Route>\n     <Redirect to=\"/\" />\n     </Switch>\n    );\n  }\n}\nelse{\nif (token) {\n  routes = (\n    <Switch>\n    <Route path=\"/home\" exact>\n    <Profile  />\n    </Route>\n    <Route path=\"/vitals\" exact>\n      <Vitals />\n    </Route>\n    <Route path=\"/prescriptions/:presID\" exact>\n      <Hello />\n    </Route>\n    <Route path=\"/medication/:medID\" exact>\n      <Hello />\n    </Route>\n    <Route path=\"/doctors\" exact>\n      <Doctors />\n    </Route>\n    <Route path=\"/allergy\" exact>\n      <Allergy />\n    </Route>\n    <Route path=\"/appointment/:docID\" exact>\n      <Appointment />\n    </Route>\n    <Redirect to=\"/home\" />\n\n  </Switch>\n  );\n}\nelse{\n  routes =(\n    <Switch>\n      <Route path=\"/\" exact>\n        <FrontPage />\n      </Route>\n    <Route path=\"/login\" exact>\n    <Login />\n    </Route>\n    <Route path=\"/signup\" exact>\n      <Signup />\n    </Route>\n    <Route path=\"/doctor/login\" exact>\n        <DoctorLogin />\n      </Route>\n      <Route path=\"/doctor/signup\" exact>\n        <DoctorSignup />\n      </Route>\n   <Redirect to=\"/\" />\n   </Switch>\n  );\n}\n}\n\n\n  return (\n    <AuthContext.Provider \n    value= {{ isLoggedIn: !!token, token: token, userId: userId, isDoctor: isDoctor,\n       doctorlogin:doctorlogin,doctorlogout:doctorlogout ,login : login , logout : logout}}\n    >\n    <Router>\n    <MainNavigation />\n    <main style={{minHeight: \"90vh\"}}>\n    {routes}\n    </main>\n  <Footer />\n  </Router>\n  </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}